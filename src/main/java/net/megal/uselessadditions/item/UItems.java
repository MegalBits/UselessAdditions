package net.megal.uselessadditions.item;

import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
import net.fabricmc.fabric.api.itemgroup.v1.ItemGroupEvents;
import net.megal.uselessadditions.UAdd;
import net.megal.uselessadditions.item.base.*;
import net.megal.uselessadditions.item.bundles.*;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.mob.MobEntity;
import net.minecraft.item.*;
import net.minecraft.registry.Registry;
import net.minecraft.registry.Registries;
import net.minecraft.text.Text;
import net.minecraft.util.Formatting;
import net.minecraft.util.Identifier;
import net.minecraft.util.Rarity;

import java.util.List;

import static net.megal.uselessadditions.block.UBlocks.*;

public class UItems {
    //Mob Ore Shards
    public static final Item ALLAY_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "allay_shard"), createItem());
    public static final Item AXOLOTL_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "axolotl_shard"), createItem());
    public static final Item BAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "bat_shard"), createItem());
    public static final Item BEE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "bee_shard"), createItem());
    public static final Item BLAZE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "blaze_shard"), createItem());
    public static final Item CAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "cat_shard"), createItem());
    public static final Item CAVE_SPIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "cave_spider_shard"), createItem());
    public static final Item CHICKEN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "chicken_shard"), createItem());
    public static final Item COD_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "cod_shard"), createItem());
    public static final Item COW_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "cow_shard"), createItem());
    public static final Item CREEPER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "creeper_shard"), createItem());
    public static final Item DOLPHIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "dolphin_shard"), createItem());
    public static final Item DONKEY_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "donkey_shard"), createItem());
    public static final Item ENDERMAN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "enderman_shard"), createItem());
    public static final Item ENDERMITE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "endermite_shard"), createItem());
    public static final Item EVOKER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "evoker_shard"), createItem());
    public static final Item FOX_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "fox_shard"), createItem());
    public static final Item FROG_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "frog_shard"), createItem());
    public static final Item GHAST_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "ghast_shard"), createItem());
    public static final Item GLOW_SQUID_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "glow_squid_shard"), createItem());
    public static final Item GOAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "goat_shard"), createItem());
    public static final Item GUARDIAN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "guardian_shard"), createItem());
    public static final Item HOGLIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "hoglin_shard"), createItem());
    public static final Item HORSE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "horse_shard"), createItem());
    public static final Item IRON_GOLEM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "iron_golem_shard"), createItem());
    public static final Item LLAMA_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "llama_shard"), createItem());
    public static final Item MAGMA_CUBE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "magma_cube_shard"), createItem());
    public static final Item OCELOT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "ocelot_shard"), createItem());
    public static final Item PANDA_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "panda_shard"), createItem());
    public static final Item PARROT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "parrot_shard"), createItem());
    public static final Item PHANTOM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "phantom_shard"), createItem());
    public static final Item PIG_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "pig_shard"), createItem());
    public static final Item PIGLIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "piglin_shard"), createItem());
    public static final Item PILLAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "pillager_shard"), createItem());
    public static final Item POLAR_BEAR_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "polar_bear_shard"), createItem());
    public static final Item PUFFERFISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "pufferfish_shard"), createItem());
    public static final Item RABBIT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "rabbit_shard"), createItem());
    public static final Item RAVAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "ravager_shard"), createItem());
    public static final Item SALMON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "salmon_shard"), createItem());
    public static final Item SHEEP_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "sheep_shard"), createItem());
    public static final Item SHULKER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "shulker_shard"), createItem());
    public static final Item SILVERFISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "silverfish_shard"), createItem());
    public static final Item SKELETON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "skeleton_shard"), createItem());
    public static final Item SLIME_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "slime_shard"), createItem());
    public static final Item SNOW_GOLEM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "snow_golem_shard"), createItem());
    public static final Item SPIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "spider_shard"), createItem());
    public static final Item SQUID_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "squid_shard"), createItem());
    public static final Item STRIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "strider_shard"), createItem());
    public static final Item TROPICAL_FISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "tropical_fish_shard"), createItem());
    public static final Item TURTLE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "turtle_shard"), createItem());
    public static final Item VEX_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "vex_shard"), createItem());
    public static final Item VILLAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "villager_shard"), createItem());
    public static final Item VINDICATOR_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "vindicator_shard"), createItem());
    public static final Item WARDEN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "warden_shard"), createItem());
    public static final Item WITHER_SKELETON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "wither_skeleton_shard"), createItem());
    public static final Item WOLF_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "wolf_shard"), createItem());
    public static final Item ZOMBIE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "zombie_shard"), createItem());
    public static final Item SMALL_ALLAY_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_allay_shard"), createItem());
    public static final Item SMALL_AXOLOTL_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_axolotl_shard"), createItem());
    public static final Item SMALL_BAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_bat_shard"), createItem());
    public static final Item SMALL_BEE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_bee_shard"), createItem());
    public static final Item SMALL_BLAZE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_blaze_shard"), createItem());
    public static final Item SMALL_CAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_cat_shard"), createItem());
    public static final Item SMALL_CAVE_SPIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_cave_spider_shard"), createItem());
    public static final Item SMALL_CHICKEN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_chicken_shard"), createItem());
    public static final Item SMALL_COD_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_cod_shard"), createItem());
    public static final Item SMALL_COW_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_cow_shard"), createItem());
    public static final Item SMALL_CREEPER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_creeper_shard"), createItem());
    public static final Item SMALL_DOLPHIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_dolphin_shard"), createItem());
    public static final Item SMALL_DONKEY_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_donkey_shard"), createItem());
    public static final Item SMALL_ENDERMAN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_enderman_shard"), createItem());
    public static final Item SMALL_ENDERMITE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_endermite_shard"), createItem());
    public static final Item SMALL_EVOKER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_evoker_shard"), createItem());
    public static final Item SMALL_FOX_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_fox_shard"), createItem());
    public static final Item SMALL_FROG_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_frog_shard"), createItem());
    public static final Item SMALL_GHAST_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_ghast_shard"), createItem());
    public static final Item SMALL_GLOW_SQUID_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_glow_squid_shard"), createItem());
    public static final Item SMALL_GOAT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_goat_shard"), createItem());
    public static final Item SMALL_GUARDIAN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_guardian_shard"), createItem());
    public static final Item SMALL_HOGLIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_hoglin_shard"), createItem());
    public static final Item SMALL_HORSE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_horse_shard"), createItem());
    public static final Item SMALL_IRON_GOLEM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_iron_golem_shard"), createItem());
    public static final Item SMALL_LLAMA_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_llama_shard"), createItem());
    public static final Item SMALL_MAGMA_CUBE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_magma_cube_shard"), createItem());
    public static final Item SMALL_OCELOT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_ocelot_shard"), createItem());
    public static final Item SMALL_PANDA_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_panda_shard"), createItem());
    public static final Item SMALL_PARROT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_parrot_shard"), createItem());
    public static final Item SMALL_PHANTOM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_phantom_shard"), createItem());
    public static final Item SMALL_PIG_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_pig_shard"), createItem());
    public static final Item SMALL_PIGLIN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_piglin_shard"), createItem());
    public static final Item SMALL_PILLAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_pillager_shard"), createItem());
    public static final Item SMALL_POLAR_BEAR_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_polar_bear_shard"), createItem());
    public static final Item SMALL_PUFFERFISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_pufferfish_shard"), createItem());
    public static final Item SMALL_RABBIT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_rabbit_shard"), createItem());
    public static final Item SMALL_RAVAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_ravager_shard"), createItem());
    public static final Item SMALL_SALMON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_salmon_shard"), createItem());
    public static final Item SMALL_SHEEP_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_sheep_shard"), createItem());
    public static final Item SMALL_SHULKER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_shulker_shard"), createItem());
    public static final Item SMALL_SILVERFISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_silverfish_shard"), createItem());
    public static final Item SMALL_SKELETON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_skeleton_shard"), createItem());
    public static final Item SMALL_SLIME_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_slime_shard"), createItem());
    public static final Item SMALL_SNOW_GOLEM_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_snow_golem_shard"), createItem());
    public static final Item SMALL_SPIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_spider_shard"), createItem());
    public static final Item SMALL_SQUID_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_squid_shard"), createItem());
    public static final Item SMALL_STRIDER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_strider_shard"), createItem());
    public static final Item SMALL_TROPICAL_FISH_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_tropical_fish_shard"), createItem());
    public static final Item SMALL_TURTLE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_turtle_shard"), createItem());
    public static final Item SMALL_VEX_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_vex_shard"), createItem());
    public static final Item SMALL_VILLAGER_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_villager_shard"), createItem());
    public static final Item SMALL_VINDICATOR_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_vindicator_shard"), createItem());
    public static final Item SMALL_WARDEN_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_warden_shard"), createItem());
    public static final Item SMALL_WITHER_SKELETON_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_wither_skeleton_shard"), createItem());
    public static final Item SMALL_WOLF_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_wolf_shard"), createItem());
    public static final Item SMALL_ZOMBIE_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "small_zombie_shard"), createItem());
    //Spawn Eggs
    public static final SpawnEgg ALLAY_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "allay_spawn_egg"), createSpawnEgg(EntityType.ALLAY));
    public static final SpawnEgg AXOLOTL_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "axolotl_spawn_egg"), createSpawnEgg(EntityType.AXOLOTL));
    public static final SpawnEgg BAT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "bat_spawn_egg"), createSpawnEgg(EntityType.BAT));
    public static final SpawnEgg BEE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "bee_spawn_egg"), createSpawnEgg(EntityType.BEE));
    public static final SpawnEgg BLAZE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "blaze_spawn_egg"), createSpawnEgg(EntityType.BLAZE));
    public static final SpawnEgg CAT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "cat_spawn_egg"), createSpawnEgg(EntityType.CAT));
    public static final SpawnEgg CAVE_SPIDER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "cave_spider_spawn_egg"), createSpawnEgg(EntityType.CAVE_SPIDER));
    public static final SpawnEgg CHICKEN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "chicken_spawn_egg"), createSpawnEgg(EntityType.CHICKEN));
    public static final SpawnEgg COD_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "cod_spawn_egg"), createSpawnEgg(EntityType.COD));
    public static final SpawnEgg COW_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "cow_spawn_egg"), createSpawnEgg(EntityType.COW));
    public static final SpawnEgg CREEPER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "creeper_spawn_egg"), createSpawnEgg(EntityType.CREEPER));
    public static final SpawnEgg DROWNED_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "drowned_spawn_egg"), createSpawnEgg(EntityType.DROWNED));
    public static final SpawnEgg DOLPHIN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "dolphin_spawn_egg"), createSpawnEgg(EntityType.DOLPHIN));
    public static final SpawnEgg DONKEY_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "donkey_spawn_egg"), createSpawnEgg(EntityType.DONKEY));
    public static final SpawnEgg ELDER_GUARDIAN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "elder_guardian_spawn_egg"), createSpawnEgg(EntityType.ELDER_GUARDIAN));
    public static final SpawnEgg ENDERMAN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "enderman_spawn_egg"), createSpawnEgg(EntityType.ENDERMAN));
    public static final SpawnEgg ENDERMITE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "endermite_spawn_egg"), createSpawnEgg(EntityType.ENDERMITE));
    public static final SpawnEgg EVOKER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "evoker_spawn_egg"), createSpawnEgg(EntityType.EVOKER));
    public static final SpawnEgg FOX_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "fox_spawn_egg"), createSpawnEgg(EntityType.FOX));
    public static final SpawnEgg FROG_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "frog_spawn_egg"), createSpawnEgg(EntityType.FROG));
    public static final SpawnEgg GHAST_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "ghast_spawn_egg"), createSpawnEgg(EntityType.GHAST));
    public static final SpawnEgg GLOW_SQUID_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "glow_squid_spawn_egg"), createSpawnEgg(EntityType.GLOW_SQUID));
    public static final SpawnEgg GOAT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "goat_spawn_egg"), createSpawnEgg(EntityType.GOAT));
    public static final SpawnEgg GUARDIAN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "guardian_spawn_egg"), createSpawnEgg(EntityType.GUARDIAN));
    public static final SpawnEgg HOGLIN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "hoglin_spawn_egg"), createSpawnEgg(EntityType.HOGLIN));
    public static final SpawnEgg HORSE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "horse_spawn_egg"), createSpawnEgg(EntityType.HORSE));
    public static final SpawnEgg HUSK_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "husk_spawn_egg"), createSpawnEgg(EntityType.HUSK));
    public static final SpawnEgg IRON_GOLEM_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "iron_golem_spawn_egg"), createSpawnEgg(EntityType.IRON_GOLEM));
    public static final SpawnEgg LLAMA_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "llama_spawn_egg"), createSpawnEgg(EntityType.LLAMA));
    public static final SpawnEgg MAGMA_CUBE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "magma_cube_spawn_egg"), createSpawnEgg(EntityType.MAGMA_CUBE));
    public static final SpawnEgg OCELOT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "ocelot_spawn_egg"), createSpawnEgg(EntityType.OCELOT));
    public static final SpawnEgg PANDA_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "panda_spawn_egg"), createSpawnEgg(EntityType.PANDA));
    public static final SpawnEgg PARROT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "parrot_spawn_egg"), createSpawnEgg(EntityType.PARROT));
    public static final SpawnEgg PHANTOM_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "phantom_spawn_egg"), createSpawnEgg(EntityType.PHANTOM));
    public static final SpawnEgg PIG_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "pig_spawn_egg"), createSpawnEgg(EntityType.PIG));
    public static final SpawnEgg PIGLIN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "piglin_spawn_egg"), createSpawnEgg(EntityType.PIGLIN));
    public static final SpawnEgg PIGLIN_BRUTE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "piglin_brute_spawn_egg"), createSpawnEgg(EntityType.PIGLIN_BRUTE));
    public static final SpawnEgg PILLAGER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "pillager_spawn_egg"), createSpawnEgg(EntityType.PILLAGER));
    public static final SpawnEgg POLAR_BEAR_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "polar_bear_spawn_egg"), createSpawnEgg(EntityType.POLAR_BEAR));
    public static final SpawnEgg PUFFERFISH_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "pufferfish_spawn_egg"), createSpawnEgg(EntityType.PUFFERFISH));
    public static final SpawnEgg RABBIT_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "rabbit_spawn_egg"), createSpawnEgg(EntityType.RABBIT));
    public static final SpawnEgg RAVAGER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "ravager_spawn_egg"), createSpawnEgg(EntityType.RAVAGER));
    public static final SpawnEgg SALMON_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "salmon_spawn_egg"), createSpawnEgg(EntityType.SALMON));
    public static final SpawnEgg SHEEP_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "sheep_spawn_egg"), createSpawnEgg(EntityType.SHEEP));
    public static final SpawnEgg SHULKER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "shulker_spawn_egg"), createSpawnEgg(EntityType.SHULKER));
    public static final SpawnEgg SILVERFISH_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "silverfish_spawn_egg"), createSpawnEgg(EntityType.SILVERFISH));
    public static final SpawnEgg SKELETON_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "skeleton_spawn_egg"), createSpawnEgg(EntityType.SKELETON));
    public static final SpawnEgg SLIME_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "slime_spawn_egg"), createSpawnEgg(EntityType.SLIME));
    public static final SpawnEgg SNOW_GOLEM_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "snow_golem_spawn_egg"), createSpawnEgg(EntityType.SNOW_GOLEM));
    public static final SpawnEgg SPIDER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "spider_spawn_egg"), createSpawnEgg(EntityType.SPIDER));
    public static final SpawnEgg SQUID_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "squid_spawn_egg"), createSpawnEgg(EntityType.SQUID));
    public static final SpawnEgg STRAY_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "stray_spawn_egg"), createSpawnEgg(EntityType.STRAY));
    public static final SpawnEgg STRIDER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "strider_spawn_egg"), createSpawnEgg(EntityType.STRIDER));
    public static final SpawnEgg TROPICAL_FISH_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "tropical_fish_spawn_egg"), createSpawnEgg(EntityType.TROPICAL_FISH));
    public static final SpawnEgg TURTLE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "turtle_spawn_egg"), createSpawnEgg(EntityType.TURTLE));
    public static final SpawnEgg VEX_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "vex_spawn_egg"), createSpawnEgg(EntityType.VEX));
    public static final SpawnEgg VILLAGER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "villager_spawn_egg"), createSpawnEgg(EntityType.VILLAGER));
    public static final SpawnEgg VINDICATOR_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "vindicator_spawn_egg"), createSpawnEgg(EntityType.VINDICATOR));
    public static final SpawnEgg WARDEN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "warden_spawn_egg"), createSpawnEgg(EntityType.WARDEN));
    public static final SpawnEgg WITHER_SKELETON_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "wither_skeleton_spawn_egg"), createSpawnEgg(EntityType.WITHER_SKELETON));
    public static final SpawnEgg WOLF_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "wolf_spawn_egg"), createSpawnEgg(EntityType.WOLF));
    public static final SpawnEgg ZOGLIN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "zoglin_spawn_egg"), createSpawnEgg(EntityType.ZOGLIN));
    public static final SpawnEgg ZOMBIE_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "zombie_spawn_egg"), createSpawnEgg(EntityType.ZOMBIE));
    public static final SpawnEgg ZOMBIE_VILLAGER_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "zombie_villager_spawn_egg"), createSpawnEgg(EntityType.ZOMBIE_VILLAGER));
    public static final SpawnEgg ZOMBIFIED_PIGLIN_SPAWN_EGG = registerItem(new Identifier(UAdd.MOD_ID, "zombified_piglin_spawn_egg"), createSpawnEgg(EntityType.ZOMBIFIED_PIGLIN));
    //Materials
    // -- Misc
    public static final Item EMPTY_DISC = registerItem(new Identifier(UAdd.MOD_ID, "empty_disc"), createItem());
    public static final DamageableItem BUNDLED_FLOWERS = registerItem(new Identifier(UAdd.MOD_ID, "bundled_flowers"), new DamageableItem(new FabricItemSettings().maxCount(1).maxDamage(16)));
    public static final Item CACTUS_LINING = registerItem(new Identifier(UAdd.MOD_ID, "cactus_lining"), createItem());
    public static final TooltipItem AXOLOTL_TAIL = registerItem(new Identifier(UAdd.MOD_ID, "axolotl_tail"), createTooltipItem());
    public static final TooltipItem BEE_STINGER = registerItem(new Identifier(UAdd.MOD_ID, "bee_stinger"), createTooltipItem());
    public static final TooltipItem PUFFERFISH_SPINE = registerItem(new Identifier(UAdd.MOD_ID, "pufferfish_spine"), createTooltipItem());
    public static final TooltipItem TOY_FISH = registerItem(new Identifier(UAdd.MOD_ID, "toy_fish"), createTooltipItem());
    public static final TooltipItem DOLPHIN_FIN = registerItem(new Identifier(UAdd.MOD_ID, "dolphin_fin"), createTooltipItem());
    public static final TooltipItem BIG_INK_SAC = registerItem(new Identifier(UAdd.MOD_ID, "big_ink_sac"), createTooltipItem());
    public static final TooltipItem BIG_GLOW_INK_SAC = registerItem(new Identifier(UAdd.MOD_ID, "big_glow_ink_sac"), createTooltipItem());
    public static final TooltipItem POSION_GLAND = registerItem(new Identifier(UAdd.MOD_ID, "poison_gland"), createTooltipItem());
    public static final TooltipItem ARID_CLOTH = registerItem(new Identifier(UAdd.MOD_ID, "arid_cloth"), createTooltipItem());
    public static final TooltipItem FRIGID_CLOTH = registerItem(new Identifier(UAdd.MOD_ID, "frigid_cloth"), createTooltipItem());
    public static final TooltipItem PHANTOM_HEART = registerItem(new Identifier(UAdd.MOD_ID, "phantom_heart"), createTooltipItem());
    public static final TooltipItem FIREBALL_GLAND = registerItem(new Identifier(UAdd.MOD_ID, "fireball_gland"), createTooltipItem());
    public static final GlintItem MAGIC_FEATHER = registerItem(new Identifier(UAdd.MOD_ID, "magic_feather"), new GlintItem(new FabricItemSettings().rarity(Rarity.RARE)));
    public static final Item DRAGON_SCALE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale"), new Item(new FabricItemSettings().fireproof().rarity(Rarity.UNCOMMON)));
    public static final Item DRAGON_HEART = registerItem(new Identifier(UAdd.MOD_ID, "dragon_heart"), new Item(new FabricItemSettings().fireproof().rarity(Rarity.EPIC)));
    public static final Item WEATHERED_SCRAP = registerItem(new Identifier(UAdd.MOD_ID, "weathered_scrap"), new Item(new FabricItemSettings()));
    public static final Item ANCIENT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "ancient_shard"), new Item(new FabricItemSettings().fireproof()));
    public static final Item ENDER_PEARL_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "ender_pearl_shard"), createItem());
    public static final Item MYSTERIOUS_BARK = registerItem(new Identifier(UAdd.MOD_ID, "mysterious_bark"), createItem());
    public static final Item ESSENCE_OF_UNDERGROUND = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_underground"), createItem());
    public static final Item ESSENCE_OF_AMETHYST = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_amethyst"), createItem());
    public static final Item TESLA_COIL = registerItem(new Identifier(UAdd.MOD_ID, "tesla_coil"), createItem());
    public static final Item ESSENCE_OF_IRON = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_iron"), createItem());
    public static final Item ESSENCE_OF_GOLD = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_gold"), createItem());
    public static final Item ESSENCE_OF_DIAMOND = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_diamond"), createItem());
    public static final Item ESSENCE_OF_EMERALD = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_emerald"), createItem());
    public static final Item ESSENCE_OF_NETHERITE = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_netherite"), new Item(new FabricItemSettings().fireproof()));
    public static final TooltipItem ESSENCE_OF_UNDEAD = registerItem(new Identifier(UAdd.MOD_ID, "essence_of_undead"), createTooltipItem());
    public static final GlintItem STAR_DAMAGE = registerItem(new Identifier(UAdd.MOD_ID, "star_damage"), new GlintItem(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    public static final GlintItem STAR_MINING = registerItem(new Identifier(UAdd.MOD_ID, "star_mining"), new GlintItem(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    public static final GlintItem STAR_ARMOR = registerItem(new Identifier(UAdd.MOD_ID, "star_armor"), new GlintItem(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    public static final GlintItem STAR_DURABILITY = registerItem(new Identifier(UAdd.MOD_ID, "star_durability"), new GlintItem(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    public static final MagicBook MAGIC_BOOK = registerItem(new Identifier(UAdd.MOD_ID, "magic_book"), new MagicBook(new FabricItemSettings().maxCount(1).maxDamage(3).rarity(Rarity.EPIC), Formatting.GRAY));
    public static final Item IRON_BUNDLE_UPGRADE = registerItem(new Identifier(UAdd.MOD_ID, "iron_bundle_upgrade"), createItem());
    public static final Item DIAMOND_BUNDLE_UPGRADE = registerItem(new Identifier(UAdd.MOD_ID, "diamond_bundle_upgrade"), createItem());
    // -- Dusts
    public static final Item DIRT_PILE = registerItem(new Identifier(UAdd.MOD_ID, "dirt_pile"), createItem());
    public static final Item SAND_PILE = registerItem(new Identifier(UAdd.MOD_ID, "sand_pile"), createItem());
    public static final Item RED_SAND_PILE = registerItem(new Identifier(UAdd.MOD_ID, "red_sand_pile"), createItem());
    public static final Item FLINT_SHARD = registerItem(new Identifier(UAdd.MOD_ID, "flint_shard"), createItem());
    public static final Item ROCK = registerItem(new Identifier(UAdd.MOD_ID, "rock"), createItem());
    public static final Item DEEPSLATE_ROCK = registerItem(new Identifier(UAdd.MOD_ID, "deepslate_rock"), createItem());
    public static final Item ASH = registerItem(new Identifier(UAdd.MOD_ID, "ash"), createItem());
    public static final Item EXOTIC_DUST = registerItem(new Identifier(UAdd.MOD_ID, "exotic_dust"), new Item(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    // -- Nuggets
    public static final Item FORTRESS_NUGGET = registerItem(new Identifier(UAdd.MOD_ID, "fortress_nugget"), createItem());
    public static final Item NETHERITE_NUGGET = registerItem(new Identifier(UAdd.MOD_ID, "netherite_nugget"), new Item(new FabricItemSettings().fireproof()));
    // -- Ingots
    public static final Item RUBY = registerItem(new Identifier(UAdd.MOD_ID, "ruby"), createItem());
    public static final TooltipItem EMPOWERED_EMERALD = registerItem(new Identifier(UAdd.MOD_ID, "empowered_emerald"), createTooltipItem());
    public static final Item MAGIC_INGOT = registerItem(new Identifier(UAdd.MOD_ID, "magic_ingot"), createItem());
    public static final GlintItem ENCHANTED_MAGIC_INGOT = registerItem(new Identifier(UAdd.MOD_ID, "enchanted_magic_ingot"), new GlintItem(new FabricItemSettings().rarity(Rarity.RARE)));
    public static final TooltipItem BLAZE_METAL = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal"), createTooltipItem());
    public static final Item EXOTIC_INGOT = registerItem(new Identifier(UAdd.MOD_ID, "exotic_ingot"), new Item(new FabricItemSettings().rarity(Rarity.UNCOMMON)));
    // -- Tool Components
    public static final Item NETHERITE_STICK = registerItem(new Identifier(UAdd.MOD_ID, "netherite_stick"), new Item(new FabricItemSettings().fireproof()));
    //Hammer
    public static final DamageableItem MAKESHIFT_HAMMER = registerItem(new Identifier(UAdd.MOD_ID, "makeshift_hammer"), new DamageableItem(new FabricItemSettings().maxCount(1).maxDamage(16)));
    public static final DamageableItem HAMMER = registerItem(new Identifier(UAdd.MOD_ID, "hammer"), new DamageableItem(new FabricItemSettings().maxCount(1).maxDamage(64)));
    public static final DamageableGlintItem ENCHANTED_HAMMER = registerItem(new Identifier(UAdd.MOD_ID, "enchanted_hammer"), new DamageableGlintItem(new FabricItemSettings().maxCount(1).maxDamage(4096)));
    //Tools
    public static final USwordItem AMETHYST_SWORD = registerItem(new Identifier(UAdd.MOD_ID, "amethyst_sword"), new USwordItem(UToolMaterials.AMETHYST, 3, -2.4F, new FabricItemSettings()));
    public static final UShovelItem AMETHYST_SHOVEL = registerItem(new Identifier(UAdd.MOD_ID, "amethyst_shovel"), new UShovelItem(UToolMaterials.AMETHYST, 1.5F, -3.0F, new FabricItemSettings()));
    public static final UPickaxeItem AMETHYST_PICKAXE = registerItem(new Identifier(UAdd.MOD_ID, "amethyst_pickaxe"), new UPickaxeItem(UToolMaterials.AMETHYST, 1, -2.8F, new FabricItemSettings()));
    public static final UAxeItem AMETHYST_AXE = registerItem(new Identifier(UAdd.MOD_ID, "amethyst_axe"), new UAxeItem(UToolMaterials.AMETHYST, 5.0F, -3F, new FabricItemSettings()));
    public static final UHoeItem AMETHYST_HOE = registerItem(new Identifier(UAdd.MOD_ID, "amethyst_hoe"), new UHoeItem(UToolMaterials.AMETHYST_P5, -2, 0.0F, new FabricItemSettings()));
    public static final USwordItem EMERALD_SWORD = registerItem(new Identifier(UAdd.MOD_ID, "emerald_sword"), new USwordItem(UToolMaterials.EMERALD, 3, -2.4F, new FabricItemSettings()));
    public static final UShovelItem EMERALD_SHOVEL = registerItem(new Identifier(UAdd.MOD_ID, "emerald_shovel"), new UShovelItem(UToolMaterials.EMERALD, 1.5F, -3.0F, new FabricItemSettings()));
    public static final UPickaxeItem EMERALD_PICKAXE = registerItem(new Identifier(UAdd.MOD_ID, "emerald_pickaxe"), new UPickaxeItem(UToolMaterials.EMERALD, 1, -2.8F, new FabricItemSettings()));
    public static final UAxeItem EMERALD_AXE = registerItem(new Identifier(UAdd.MOD_ID, "emerald_axe"), new UAxeItem(UToolMaterials.EMERALD, 5.0F, -3.0F, new FabricItemSettings()));
    public static final UHoeItem EMERALD_HOE = registerItem(new Identifier(UAdd.MOD_ID, "emerald_hoe"), new UHoeItem(UToolMaterials.EMERALD, -3, 0.0F, new FabricItemSettings()));
    public static final USwordItem BLAZE_METAL_SWORD = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal_sword"), new USwordItem(UToolMaterials.BLAZE_METAL, 3, -2.4F, new FabricItemSettings()));
    public static final UShovelItem BLAZE_METAL_SHOVEL = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal_shovel"), new UShovelItem(UToolMaterials.BLAZE_METAL, 1.5F, -3.0F, new FabricItemSettings()));
    public static final UPickaxeItem BLAZE_METAL_PICKAXE = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal_pickaxe"), new UPickaxeItem(UToolMaterials.BLAZE_METAL, 1, -2.8F, new FabricItemSettings()));
    public static final UAxeItem BLAZE_METAL_AXE = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal_axe"), new UAxeItem(UToolMaterials.BLAZE_METAL, 5.0F, -3.0F, new FabricItemSettings()));
    public static final UHoeItem BLAZE_METAL_HOE = registerItem(new Identifier(UAdd.MOD_ID, "blaze_metal_hoe"), new UHoeItem(UToolMaterials.BLAZE_METAL_P5, -3, 0.0F, new FabricItemSettings()));
    public static final USwordItem DRAGON_SCALE_SWORD = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_sword"), new USwordItem(UToolMaterials.DRAGON_SCALE, 3, -2.4F, new FabricItemSettings()));
    public static final UShovelItem DRAGON_SCALE_SHOVEL = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_shovel"), new UShovelItem(UToolMaterials.DRAGON_SCALE, 1.5F, -3.0F, new FabricItemSettings()));
    public static final UPickaxeItem DRAGON_SCALE_PICKAXE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_pickaxe"), new UPickaxeItem(UToolMaterials.DRAGON_SCALE, 1, -2.8F, new FabricItemSettings()));
    public static final UAxeItem DRAGON_SCALE_AXE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_axe"), new UAxeItem(UToolMaterials.DRAGON_SCALE, 5.0F, -3.0F, new FabricItemSettings()));
    public static final UHoeItem DRAGON_SCALE_HOE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_hoe"), new UHoeItem(UToolMaterials.DRAGON_SCALE, -4, 0.0F, new FabricItemSettings()));
    //Armors
    public static final ArmorItem DRAGON_SCALE_HELMET = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_helmet"), new ArmorItem(UArmorMaterials.DRAGON_SCALE, ArmorItem.Type.HELMET, new FabricItemSettings().fireproof()));
    public static final ArmorItem DRAGON_SCALE_CHESTPLATE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_chestplate"), new ArmorItem(UArmorMaterials.DRAGON_SCALE, ArmorItem.Type.CHESTPLATE, new FabricItemSettings().fireproof()));
    public static final ArmorItem DRAGON_SCALE_LEGGINGS = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_leggings"), new ArmorItem(UArmorMaterials.DRAGON_SCALE, ArmorItem.Type.LEGGINGS, new FabricItemSettings().fireproof()));
    public static final ArmorItem DRAGON_SCALE_BOOTS = registerItem(new Identifier(UAdd.MOD_ID, "dragon_scale_boots"), new ArmorItem(UArmorMaterials.DRAGON_SCALE, ArmorItem.Type.BOOTS, new FabricItemSettings().fireproof()));
    //Utility
    public static final Bundle BUNDLE = registerItem(new Identifier(UAdd.MOD_ID, "bundle"), new Bundle(new FabricItemSettings().maxCount(1)));
    public static final IronBundle IRON_BUNDLE = registerItem(new Identifier(UAdd.MOD_ID, "iron_bundle"), new IronBundle(new FabricItemSettings().maxCount(1)));
    public static final DiamondBundle DIAMOND_BUNDLE = registerItem(new Identifier(UAdd.MOD_ID, "diamond_bundle"), new DiamondBundle(new FabricItemSettings().maxCount(1)));
    public static final NetheriteBundle NETHERITE_BUNDLE = registerItem(new Identifier(UAdd.MOD_ID, "netherite_bundle"), new NetheriteBundle(new FabricItemSettings().maxCount(1).fireproof()));
    public static final DragonBundle DRAGON_BUNDLE = registerItem(new Identifier(UAdd.MOD_ID, "dragon_bundle"), new DragonBundle(new FabricItemSettings().maxCount(1).fireproof().rarity(Rarity.EPIC)));
    public static final TraderSatchel TRADER_SATCHEL = registerItem(new Identifier(UAdd.MOD_ID, "trader_satchel"), new TraderSatchel(new FabricItemSettings().maxCount(1).rarity(Rarity.UNCOMMON)));
    //Food
    public static final AllayCookie ALLAY_COOKIE = registerItem(new Identifier(UAdd.MOD_ID, "allay_cookie"), new AllayCookie(new FabricItemSettings().food(UFoodComponents.ALLAY_COOKIE), Formatting.GRAY));
    public static final Item BONELESS_BAT_WING = registerItem(new Identifier(UAdd.MOD_ID, "boneless_bat_wing"), new Item(new FabricItemSettings().food(UFoodComponents.BAT_WING)));
    public static final Item BAT_WING = registerItem(new Identifier(UAdd.MOD_ID, "bat_wing"), new Item(new FabricItemSettings().recipeRemainder(BONELESS_BAT_WING)));
    public static final TooltipItem FROG_LEG = registerItem(new Identifier(UAdd.MOD_ID, "frog_leg"), new TooltipItem(new FabricItemSettings().food(UFoodComponents.FROG_LEG), Formatting.GRAY));
    public static final StewItem FROG_LEG_STEW = registerItem(new Identifier(UAdd.MOD_ID, "frog_leg_stew"), new StewItem(new FabricItemSettings().food(UFoodComponents.FROG_LEG_STEW)));
    public static final Item RAW_AXOLOTL = registerItem(new Identifier(UAdd.MOD_ID, "raw_axolotl"), new Item(new FabricItemSettings().food(UFoodComponents.RAW_AXOLOTL)));
    public static final Item COOKED_AXOLOTL = registerItem(new Identifier(UAdd.MOD_ID, "cooked_axolotl"), new Item(new FabricItemSettings().food(UFoodComponents.COOKED_AXOLOTL)));
    public static final Item DRAGON_FLESH = registerItem(new Identifier(UAdd.MOD_ID, "dragon_flesh"), new Item(new FabricItemSettings().food(UFoodComponents.DRAGON_FLESH).fireproof()));
    public static final Item LESSER_GOLDEN_CARROT = registerItem(new Identifier(UAdd.MOD_ID, "lesser_golden_carrot"), new Item(new FabricItemSettings().food(UFoodComponents.LESSER_GOLDEN_CARROT)));
    public static final GlintItem ENCHANTED_GOLDEN_CARROT = registerItem(new Identifier(UAdd.MOD_ID, "enchanted_golden_carrot"), new GlintItem(new FabricItemSettings().food(UFoodComponents.ENCHANTED_GOLDEN_CARROT).rarity(Rarity.RARE)));
    public static final GlintItem MAGIC_CARROT = registerItem(new Identifier(UAdd.MOD_ID, "magic_carrot"), new GlintItem(new FabricItemSettings().food(UFoodComponents.MAGIC_CARROT).rarity(Rarity.EPIC)));
    public static final Item LESSER_GOLDEN_APPLE = registerItem(new Identifier(UAdd.MOD_ID, "lesser_golden_apple"), new Item(new FabricItemSettings().food(UFoodComponents.LESSER_GOLDEN_APPLE)));
    public static final GlintItem MAGIC_APPLE = registerItem(new Identifier(UAdd.MOD_ID, "magic_apple"), new GlintItem(new FabricItemSettings().food(UFoodComponents.MAGIC_APPLE).rarity(Rarity.EPIC)));
    //Unobtainable
    public static final Item AUGMENT = registerItem(new Identifier(UAdd.MOD_ID, "augment"), createItem());
    private static Item createItem() {
        return new Item(new FabricItemSettings());
    }
    private static TooltipItem createTooltipItem() {
        return new TooltipItem(new FabricItemSettings(), Formatting.GRAY);
    }
    private static TooltipGlintItem createTooltipGlintItem() {
        return new TooltipGlintItem(new FabricItemSettings(), Formatting.GRAY);
    }
    private static SmithingTemplateItem createSmithingTemplate(String name) {
        List<Identifier> emptyBaseSlotTextures = List.of(
                new Identifier("item/empty_armor_slot_helmet"),
                new Identifier("item/empty_slot_sword"),
                new Identifier("item/empty_armor_slot_chestplate"),
                new Identifier("item/empty_slot_pickaxe"),
                new Identifier("item/empty_armor_slot_leggings"),
                new Identifier("item/empty_slot_axe"),
                new Identifier("item/empty_armor_slot_boots"),
                new Identifier("item/empty_slot_hoe"),
                new Identifier("item/empty_slot_shovel"));
        List<Identifier> emptyAdditionSlotTextures = List.of(
                new Identifier("item/empty_slot_ingot"));
        return new SmithingTemplateItem(
                Text.translatable("smithing_template.uselessadditions."+name+".applies_to").formatted(Formatting.BLUE),
                Text.translatable("smithing_template.uselessadditions."+name+".ingredients").formatted(Formatting.BLUE),
                Text.translatable("smithing_template.uselessadditions."+name).formatted(Formatting.GRAY),
                Text.translatable("smithing_template.uselessadditions."+name+".base_slot_description"),
                Text.translatable("smithing_template.uselessadditions."+name+".additions_slot_description"),
                emptyBaseSlotTextures,
                emptyAdditionSlotTextures);
    }
    private static SpawnEgg createSpawnEgg(EntityType<? extends MobEntity> type) {
        return new SpawnEgg(new FabricItemSettings(), type);
    }
    private static <T extends Item> T registerItem(Identifier id, T item) {
        return Registry.register(Registries.ITEM, id, item);
    }
    public static void itemTabs() {
        ItemGroupEvents.modifyEntriesEvent(UGroups.UAddTab).register(entries -> {
            // Mob Ore Shards
            entries.add(ALLAY_SHARD.getDefaultStack());
            entries.add(AXOLOTL_SHARD.getDefaultStack());
            entries.add(BAT_SHARD.getDefaultStack());
            entries.add(BEE_SHARD.getDefaultStack());
            entries.add(BLAZE_SHARD.getDefaultStack());
            entries.add(CAT_SHARD.getDefaultStack());
            entries.add(CAVE_SPIDER_SHARD.getDefaultStack());
            entries.add(CHICKEN_SHARD.getDefaultStack());
            entries.add(COD_SHARD.getDefaultStack());
            entries.add(COW_SHARD.getDefaultStack());
            entries.add(CREEPER_SHARD.getDefaultStack());
            entries.add(DOLPHIN_SHARD.getDefaultStack());
            entries.add(DONKEY_SHARD.getDefaultStack());
            entries.add(ENDERMAN_SHARD.getDefaultStack());
            entries.add(ENDERMITE_SHARD.getDefaultStack());
            entries.add(EVOKER_SHARD.getDefaultStack());
            entries.add(FOX_SHARD.getDefaultStack());
            entries.add(FROG_SHARD.getDefaultStack());
            entries.add(GHAST_SHARD.getDefaultStack());
            entries.add(GLOW_SQUID_SHARD.getDefaultStack());
            entries.add(GOAT_SHARD.getDefaultStack());
            entries.add(GUARDIAN_SHARD.getDefaultStack());
            entries.add(HOGLIN_SHARD.getDefaultStack());
            entries.add(HORSE_SHARD.getDefaultStack());
            entries.add(IRON_GOLEM_SHARD.getDefaultStack());
            entries.add(LLAMA_SHARD.getDefaultStack());
            entries.add(MAGMA_CUBE_SHARD.getDefaultStack());
            entries.add(OCELOT_SHARD.getDefaultStack());
            entries.add(PANDA_SHARD.getDefaultStack());
            entries.add(PARROT_SHARD.getDefaultStack());
            entries.add(PHANTOM_SHARD.getDefaultStack());
            entries.add(PIG_SHARD.getDefaultStack());
            entries.add(PIGLIN_SHARD.getDefaultStack());
            entries.add(PILLAGER_SHARD.getDefaultStack());
            entries.add(POLAR_BEAR_SHARD.getDefaultStack());
            entries.add(PUFFERFISH_SHARD.getDefaultStack());
            entries.add(RABBIT_SHARD.getDefaultStack());
            entries.add(RAVAGER_SHARD.getDefaultStack());
            entries.add(SALMON_SHARD.getDefaultStack());
            entries.add(SHEEP_SHARD.getDefaultStack());
            entries.add(SHULKER_SHARD.getDefaultStack());
            entries.add(SILVERFISH_SHARD.getDefaultStack());
            entries.add(SKELETON_SHARD.getDefaultStack());
            entries.add(SLIME_SHARD.getDefaultStack());
            entries.add(SNOW_GOLEM_SHARD.getDefaultStack());
            entries.add(SPIDER_SHARD.getDefaultStack());
            entries.add(SQUID_SHARD.getDefaultStack());
            entries.add(STRIDER_SHARD.getDefaultStack());
            entries.add(TROPICAL_FISH_SHARD.getDefaultStack());
            entries.add(TURTLE_SHARD.getDefaultStack());
            entries.add(VEX_SHARD.getDefaultStack());
            entries.add(VILLAGER_SHARD.getDefaultStack());
            entries.add(VINDICATOR_SHARD.getDefaultStack());
            entries.add(WARDEN_SHARD.getDefaultStack());
            entries.add(WITHER_SKELETON_SHARD.getDefaultStack());
            entries.add(WOLF_SHARD.getDefaultStack());
            entries.add(ZOMBIE_SHARD.getDefaultStack());
            entries.add(SMALL_ALLAY_SHARD.getDefaultStack());
            entries.add(SMALL_AXOLOTL_SHARD.getDefaultStack());
            entries.add(SMALL_BAT_SHARD.getDefaultStack());
            entries.add(SMALL_BEE_SHARD.getDefaultStack());
            entries.add(SMALL_BLAZE_SHARD.getDefaultStack());
            entries.add(SMALL_CAT_SHARD.getDefaultStack());
            entries.add(SMALL_CAVE_SPIDER_SHARD.getDefaultStack());
            entries.add(SMALL_CHICKEN_SHARD.getDefaultStack());
            entries.add(SMALL_COD_SHARD.getDefaultStack());
            entries.add(SMALL_COW_SHARD.getDefaultStack());
            entries.add(SMALL_CREEPER_SHARD.getDefaultStack());
            entries.add(SMALL_DOLPHIN_SHARD.getDefaultStack());
            entries.add(SMALL_DONKEY_SHARD.getDefaultStack());
            entries.add(SMALL_ENDERMAN_SHARD.getDefaultStack());
            entries.add(SMALL_ENDERMITE_SHARD.getDefaultStack());
            entries.add(SMALL_EVOKER_SHARD.getDefaultStack());
            entries.add(SMALL_FOX_SHARD.getDefaultStack());
            entries.add(SMALL_FROG_SHARD.getDefaultStack());
            entries.add(SMALL_GHAST_SHARD.getDefaultStack());
            entries.add(SMALL_GLOW_SQUID_SHARD.getDefaultStack());
            entries.add(SMALL_GOAT_SHARD.getDefaultStack());
            entries.add(SMALL_GUARDIAN_SHARD.getDefaultStack());
            entries.add(SMALL_HOGLIN_SHARD.getDefaultStack());
            entries.add(SMALL_HORSE_SHARD.getDefaultStack());
            entries.add(SMALL_IRON_GOLEM_SHARD.getDefaultStack());
            entries.add(SMALL_LLAMA_SHARD.getDefaultStack());
            entries.add(SMALL_MAGMA_CUBE_SHARD.getDefaultStack());
            entries.add(SMALL_OCELOT_SHARD.getDefaultStack());
            entries.add(SMALL_PANDA_SHARD.getDefaultStack());
            entries.add(SMALL_PARROT_SHARD.getDefaultStack());
            entries.add(SMALL_PHANTOM_SHARD.getDefaultStack());
            entries.add(SMALL_PIG_SHARD.getDefaultStack());
            entries.add(SMALL_PIGLIN_SHARD.getDefaultStack());
            entries.add(SMALL_PILLAGER_SHARD.getDefaultStack());
            entries.add(SMALL_POLAR_BEAR_SHARD.getDefaultStack());
            entries.add(SMALL_PUFFERFISH_SHARD.getDefaultStack());
            entries.add(SMALL_RABBIT_SHARD.getDefaultStack());
            entries.add(SMALL_RAVAGER_SHARD.getDefaultStack());
            entries.add(SMALL_SALMON_SHARD.getDefaultStack());
            entries.add(SMALL_SHEEP_SHARD.getDefaultStack());
            entries.add(SMALL_SHULKER_SHARD.getDefaultStack());
            entries.add(SMALL_SILVERFISH_SHARD.getDefaultStack());
            entries.add(SMALL_SKELETON_SHARD.getDefaultStack());
            entries.add(SMALL_SLIME_SHARD.getDefaultStack());
            entries.add(SMALL_SNOW_GOLEM_SHARD.getDefaultStack());
            entries.add(SMALL_SPIDER_SHARD.getDefaultStack());
            entries.add(SMALL_SQUID_SHARD.getDefaultStack());
            entries.add(SMALL_STRIDER_SHARD.getDefaultStack());
            entries.add(SMALL_TROPICAL_FISH_SHARD.getDefaultStack());
            entries.add(SMALL_TURTLE_SHARD.getDefaultStack());
            entries.add(SMALL_VEX_SHARD.getDefaultStack());
            entries.add(SMALL_VILLAGER_SHARD.getDefaultStack());
            entries.add(SMALL_VINDICATOR_SHARD.getDefaultStack());
            entries.add(SMALL_WARDEN_SHARD.getDefaultStack());
            entries.add(SMALL_WITHER_SKELETON_SHARD.getDefaultStack());
            entries.add(SMALL_WOLF_SHARD.getDefaultStack());
            entries.add(SMALL_ZOMBIE_SHARD.getDefaultStack());
            // Spawn Eggs
            entries.add(ALLAY_SPAWN_EGG.getDefaultStack());
            entries.add(AXOLOTL_SPAWN_EGG.getDefaultStack());
            entries.add(BAT_SPAWN_EGG.getDefaultStack());
            entries.add(BEE_SPAWN_EGG.getDefaultStack());
            entries.add(BLAZE_SPAWN_EGG.getDefaultStack());
            entries.add(CAT_SPAWN_EGG.getDefaultStack());
            entries.add(CAVE_SPIDER_SPAWN_EGG.getDefaultStack());
            entries.add(CHICKEN_SPAWN_EGG.getDefaultStack());
            entries.add(COD_SPAWN_EGG.getDefaultStack());
            entries.add(COW_SPAWN_EGG.getDefaultStack());
            entries.add(CREEPER_SPAWN_EGG.getDefaultStack());
            entries.add(DOLPHIN_SPAWN_EGG.getDefaultStack());
            entries.add(DONKEY_SPAWN_EGG.getDefaultStack());
            entries.add(DROWNED_SPAWN_EGG.getDefaultStack());
            entries.add(ENDERMAN_SPAWN_EGG.getDefaultStack());
            entries.add(ENDERMITE_SPAWN_EGG.getDefaultStack());
            entries.add(ELDER_GUARDIAN_SPAWN_EGG.getDefaultStack());
            entries.add(EVOKER_SPAWN_EGG.getDefaultStack());
            entries.add(FOX_SPAWN_EGG.getDefaultStack());
            entries.add(FROG_SPAWN_EGG.getDefaultStack());
            entries.add(GHAST_SPAWN_EGG.getDefaultStack());
            entries.add(GLOW_SQUID_SPAWN_EGG.getDefaultStack());
            entries.add(GOAT_SPAWN_EGG.getDefaultStack());
            entries.add(GUARDIAN_SPAWN_EGG.getDefaultStack());
            entries.add(HOGLIN_SPAWN_EGG.getDefaultStack());
            entries.add(HORSE_SPAWN_EGG.getDefaultStack());
            entries.add(HUSK_SPAWN_EGG.getDefaultStack());
            entries.add(IRON_GOLEM_SPAWN_EGG.getDefaultStack());
            entries.add(LLAMA_SPAWN_EGG.getDefaultStack());
            entries.add(MAGMA_CUBE_SPAWN_EGG.getDefaultStack());
            entries.add(OCELOT_SPAWN_EGG.getDefaultStack());
            entries.add(PANDA_SPAWN_EGG.getDefaultStack());
            entries.add(PARROT_SPAWN_EGG.getDefaultStack());
            entries.add(PHANTOM_SPAWN_EGG.getDefaultStack());
            entries.add(PIG_SPAWN_EGG.getDefaultStack());
            entries.add(PIGLIN_SPAWN_EGG.getDefaultStack());
            entries.add(PIGLIN_BRUTE_SPAWN_EGG.getDefaultStack());
            entries.add(PILLAGER_SPAWN_EGG.getDefaultStack());
            entries.add(POLAR_BEAR_SPAWN_EGG.getDefaultStack());
            entries.add(PUFFERFISH_SPAWN_EGG.getDefaultStack());
            entries.add(RABBIT_SPAWN_EGG.getDefaultStack());
            entries.add(RAVAGER_SPAWN_EGG.getDefaultStack());
            entries.add(SALMON_SPAWN_EGG.getDefaultStack());
            entries.add(SHEEP_SPAWN_EGG.getDefaultStack());
            entries.add(SHULKER_SPAWN_EGG.getDefaultStack());
            entries.add(SILVERFISH_SPAWN_EGG.getDefaultStack());
            entries.add(SKELETON_SPAWN_EGG.getDefaultStack());
            entries.add(SLIME_SPAWN_EGG.getDefaultStack());
            entries.add(SNOW_GOLEM_SPAWN_EGG.getDefaultStack());
            entries.add(SPIDER_SPAWN_EGG.getDefaultStack());
            entries.add(SQUID_SPAWN_EGG.getDefaultStack());
            entries.add(STRAY_SPAWN_EGG.getDefaultStack());
            entries.add(STRIDER_SPAWN_EGG.getDefaultStack());
            entries.add(TROPICAL_FISH_SPAWN_EGG.getDefaultStack());
            entries.add(TURTLE_SPAWN_EGG.getDefaultStack());
            entries.add(VEX_SPAWN_EGG.getDefaultStack());
            entries.add(VILLAGER_SPAWN_EGG.getDefaultStack());
            entries.add(VINDICATOR_SPAWN_EGG.getDefaultStack());
            entries.add(WARDEN_SPAWN_EGG.getDefaultStack());
            entries.add(WITHER_SKELETON_SPAWN_EGG.getDefaultStack());
            entries.add(WOLF_SPAWN_EGG.getDefaultStack());
            entries.add(ZOGLIN_SPAWN_EGG.getDefaultStack());
            entries.add(ZOMBIE_SPAWN_EGG.getDefaultStack());
            entries.add(ZOMBIE_VILLAGER_SPAWN_EGG.getDefaultStack());
            entries.add(ZOMBIFIED_PIGLIN_SPAWN_EGG.getDefaultStack());
            // Materials
            // -- Misc
            entries.add(EMPTY_DISC.getDefaultStack());
            entries.add(BUNDLED_FLOWERS.getDefaultStack());
            entries.add(CACTUS_LINING.getDefaultStack());
            //
            entries.add(AXOLOTL_TAIL.getDefaultStack());
            entries.add(BEE_STINGER.getDefaultStack());
            entries.add(PUFFERFISH_SPINE.getDefaultStack());
            entries.add(TOY_FISH.getDefaultStack());
            entries.add(DOLPHIN_FIN.getDefaultStack());
            entries.add(BIG_INK_SAC.getDefaultStack());
            entries.add(BIG_GLOW_INK_SAC.getDefaultStack());
            entries.add(POSION_GLAND.getDefaultStack());
            entries.add(ARID_CLOTH.getDefaultStack());
            entries.add(FRIGID_CLOTH.getDefaultStack());
            entries.add(PHANTOM_HEART.getDefaultStack());
            entries.add(FIREBALL_GLAND.getDefaultStack());
            entries.add(MAGIC_FEATHER.getDefaultStack());
            entries.add(DRAGON_SCALE.getDefaultStack());
            entries.add(DRAGON_HEART.getDefaultStack());
            entries.add(WEATHERED_SCRAP.getDefaultStack());
            entries.add(ANCIENT_SHARD.getDefaultStack());
            entries.add(ENDER_PEARL_SHARD.getDefaultStack());
            entries.add(MYSTERIOUS_BARK.getDefaultStack());
            entries.add(ESSENCE_OF_UNDERGROUND.getDefaultStack());
            entries.add(ESSENCE_OF_AMETHYST.getDefaultStack());
            entries.add(TESLA_COIL.getDefaultStack());
            entries.add(ESSENCE_OF_IRON.getDefaultStack());
            entries.add(ESSENCE_OF_GOLD.getDefaultStack());
            entries.add(ESSENCE_OF_DIAMOND.getDefaultStack());
            entries.add(ESSENCE_OF_EMERALD.getDefaultStack());
            entries.add(ESSENCE_OF_NETHERITE.getDefaultStack());
            entries.add(ESSENCE_OF_UNDEAD.getDefaultStack());
            entries.add(STAR_DAMAGE.getDefaultStack());
            entries.add(STAR_MINING.getDefaultStack());
            entries.add(STAR_ARMOR.getDefaultStack());
            entries.add(STAR_DURABILITY.getDefaultStack());
            entries.add(MAGIC_BOOK.getDefaultStack());
            entries.add(IRON_BUNDLE_UPGRADE.getDefaultStack());
            entries.add(DIAMOND_BUNDLE_UPGRADE.getDefaultStack());
            // -- Dusts
            entries.add(DIRT_PILE.getDefaultStack());
            entries.add(SAND_PILE.getDefaultStack());
            entries.add(RED_SAND_PILE.getDefaultStack());
            entries.add(FLINT_SHARD.getDefaultStack());
            entries.add(ROCK.getDefaultStack());
            entries.add(DEEPSLATE_ROCK.getDefaultStack());
            entries.add(ASH.getDefaultStack());
            entries.add(EXOTIC_DUST.getDefaultStack());
            // -- Nuggets
            entries.add(FORTRESS_NUGGET.getDefaultStack());
            entries.add(NETHERITE_NUGGET.getDefaultStack());
            // -- Ingots
            entries.add(RUBY.getDefaultStack());
            entries.add(EMPOWERED_EMERALD.getDefaultStack());
            entries.add(MAGIC_INGOT.getDefaultStack());
            entries.add(ENCHANTED_MAGIC_INGOT.getDefaultStack());
            entries.add(BLAZE_METAL.getDefaultStack());
            entries.add(EXOTIC_INGOT.getDefaultStack());
            // -- Tool Components
            entries.add(NETHERITE_STICK.getDefaultStack());
            // Hammer
            entries.add(MAKESHIFT_HAMMER.getDefaultStack());
            entries.add(HAMMER.getDefaultStack());
            entries.add(ENCHANTED_HAMMER.getDefaultStack());
            // Tools
            entries.add(AMETHYST_SWORD.getDefaultStack());
            entries.add(AMETHYST_SHOVEL.getDefaultStack());
            entries.add(AMETHYST_PICKAXE.getDefaultStack());
            entries.add(AMETHYST_AXE.getDefaultStack());
            entries.add(AMETHYST_HOE.getDefaultStack());
            entries.add(EMERALD_SWORD.getDefaultStack());
            entries.add(EMERALD_SHOVEL.getDefaultStack());
            entries.add(EMERALD_PICKAXE.getDefaultStack());
            entries.add(EMERALD_AXE.getDefaultStack());
            entries.add(EMERALD_HOE.getDefaultStack());
            entries.add(BLAZE_METAL_SWORD.getDefaultStack());
            entries.add(BLAZE_METAL_SHOVEL.getDefaultStack());
            entries.add(BLAZE_METAL_PICKAXE.getDefaultStack());
            entries.add(BLAZE_METAL_AXE.getDefaultStack());
            entries.add(BLAZE_METAL_HOE.getDefaultStack());
            entries.add(DRAGON_SCALE_SWORD.getDefaultStack());
            entries.add(DRAGON_SCALE_SHOVEL.getDefaultStack());
            entries.add(DRAGON_SCALE_PICKAXE.getDefaultStack());
            entries.add(DRAGON_SCALE_AXE.getDefaultStack());
            entries.add(DRAGON_SCALE_HOE.getDefaultStack());
            // Armor
            entries.add(DRAGON_SCALE_HELMET.getDefaultStack());
            entries.add(DRAGON_SCALE_CHESTPLATE.getDefaultStack());
            entries.add(DRAGON_SCALE_LEGGINGS.getDefaultStack());
            entries.add(DRAGON_SCALE_BOOTS.getDefaultStack());
            // Utility
            entries.add(BUNDLE.getDefaultStack());
            entries.add(IRON_BUNDLE.getDefaultStack());
            entries.add(DIAMOND_BUNDLE.getDefaultStack());
            entries.add(NETHERITE_BUNDLE.getDefaultStack());
            entries.add(DRAGON_BUNDLE.getDefaultStack());
            entries.add(TRADER_SATCHEL.getDefaultStack());
            // Food
            entries.add(ALLAY_COOKIE.getDefaultStack());
            entries.add(RAW_AXOLOTL.getDefaultStack());
            entries.add(COOKED_AXOLOTL.getDefaultStack());
            entries.add(BAT_WING.getDefaultStack());
            entries.add(BONELESS_BAT_WING.getDefaultStack());
            entries.add(FROG_LEG.getDefaultStack());
            entries.add(FROG_LEG_STEW.getDefaultStack());
            entries.add(DRAGON_FLESH.getDefaultStack());
            entries.add(LESSER_GOLDEN_CARROT.getDefaultStack());
            entries.add(ENCHANTED_GOLDEN_CARROT.getDefaultStack());
            entries.add(MAGIC_CARROT.getDefaultStack());
            entries.add(LESSER_GOLDEN_APPLE.getDefaultStack());
            entries.add(MAGIC_APPLE.getDefaultStack());
            // Tables
            entries.add(ENHANCEMENT_TABLE.asItem().getDefaultStack());
            // Ores
            entries.add(ALLAY_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_ALLAY_ORE.asItem().getDefaultStack());
            entries.add(NETHER_ALLAY_ORE.asItem().getDefaultStack());
            entries.add(END_ALLAY_ORE.asItem().getDefaultStack());
            entries.add(AXOLOTL_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_AXOLOTL_ORE.asItem().getDefaultStack());
            entries.add(NETHER_AXOLOTL_ORE.asItem().getDefaultStack());
            entries.add(END_AXOLOTL_ORE.asItem().getDefaultStack());
            entries.add(BAT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_BAT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_BAT_ORE.asItem().getDefaultStack());
            entries.add(END_BAT_ORE.asItem().getDefaultStack());
            entries.add(BEE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_BEE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_BEE_ORE.asItem().getDefaultStack());
            entries.add(END_BEE_ORE.asItem().getDefaultStack());
            entries.add(BLAZE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_BLAZE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_BLAZE_ORE.asItem().getDefaultStack());
            entries.add(END_BLAZE_ORE.asItem().getDefaultStack());
            entries.add(CAT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_CAT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_CAT_ORE.asItem().getDefaultStack());
            entries.add(END_CAT_ORE.asItem().getDefaultStack());
            entries.add(CAVE_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_CAVE_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_CAVE_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(END_CAVE_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(CHICKEN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_CHICKEN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_CHICKEN_ORE.asItem().getDefaultStack());
            entries.add(END_CHICKEN_ORE.asItem().getDefaultStack());
            entries.add(COD_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_COD_ORE.asItem().getDefaultStack());
            entries.add(NETHER_COD_ORE.asItem().getDefaultStack());
            entries.add(END_COD_ORE.asItem().getDefaultStack());
            entries.add(COW_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_COW_ORE.asItem().getDefaultStack());
            entries.add(NETHER_COW_ORE.asItem().getDefaultStack());
            entries.add(END_COW_ORE.asItem().getDefaultStack());
            entries.add(CREEPER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_CREEPER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_CREEPER_ORE.asItem().getDefaultStack());
            entries.add(END_CREEPER_ORE.asItem().getDefaultStack());
            entries.add(DOLPHIN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_DOLPHIN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_DOLPHIN_ORE.asItem().getDefaultStack());
            entries.add(END_DOLPHIN_ORE.asItem().getDefaultStack());
            entries.add(DONKEY_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_DONKEY_ORE.asItem().getDefaultStack());
            entries.add(NETHER_DONKEY_ORE.asItem().getDefaultStack());
            entries.add(END_DONKEY_ORE.asItem().getDefaultStack());
            entries.add(ENDERMAN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_ENDERMAN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_ENDERMAN_ORE.asItem().getDefaultStack());
            entries.add(END_ENDERMAN_ORE.asItem().getDefaultStack());
            entries.add(ENDERMITE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_ENDERMITE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_ENDERMITE_ORE.asItem().getDefaultStack());
            entries.add(END_ENDERMITE_ORE.asItem().getDefaultStack());
            entries.add(EVOKER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_EVOKER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_EVOKER_ORE.asItem().getDefaultStack());
            entries.add(END_EVOKER_ORE.asItem().getDefaultStack());
            entries.add(FOX_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_FOX_ORE.asItem().getDefaultStack());
            entries.add(NETHER_FOX_ORE.asItem().getDefaultStack());
            entries.add(END_FOX_ORE.asItem().getDefaultStack());
            entries.add(FROG_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_FROG_ORE.asItem().getDefaultStack());
            entries.add(NETHER_FROG_ORE.asItem().getDefaultStack());
            entries.add(END_FROG_ORE.asItem().getDefaultStack());
            entries.add(GHAST_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_GHAST_ORE.asItem().getDefaultStack());
            entries.add(NETHER_GHAST_ORE.asItem().getDefaultStack());
            entries.add(END_GHAST_ORE.asItem().getDefaultStack());
            entries.add(GLOW_SQUID_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_GLOW_SQUID_ORE.asItem().getDefaultStack());
            entries.add(NETHER_GLOW_SQUID_ORE.asItem().getDefaultStack());
            entries.add(END_GLOW_SQUID_ORE.asItem().getDefaultStack());
            entries.add(GOAT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_GOAT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_GOAT_ORE.asItem().getDefaultStack());
            entries.add(END_GOAT_ORE.asItem().getDefaultStack());
            entries.add(GUARDIAN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_GUARDIAN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_GUARDIAN_ORE.asItem().getDefaultStack());
            entries.add(END_GUARDIAN_ORE.asItem().getDefaultStack());
            entries.add(HOGLIN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_HOGLIN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_HOGLIN_ORE.asItem().getDefaultStack());
            entries.add(END_HOGLIN_ORE.asItem().getDefaultStack());
            entries.add(HORSE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_HORSE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_HORSE_ORE.asItem().getDefaultStack());
            entries.add(END_HORSE_ORE.asItem().getDefaultStack());
            entries.add(IRON_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_IRON_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(NETHER_IRON_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(END_IRON_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(LLAMA_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_LLAMA_ORE.asItem().getDefaultStack());
            entries.add(NETHER_LLAMA_ORE.asItem().getDefaultStack());
            entries.add(END_LLAMA_ORE.asItem().getDefaultStack());
            entries.add(MAGMA_CUBE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_MAGMA_CUBE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_MAGMA_CUBE_ORE.asItem().getDefaultStack());
            entries.add(END_MAGMA_CUBE_ORE.asItem().getDefaultStack());
            entries.add(OCELOT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_OCELOT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_OCELOT_ORE.asItem().getDefaultStack());
            entries.add(END_OCELOT_ORE.asItem().getDefaultStack());
            entries.add(PANDA_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PANDA_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PANDA_ORE.asItem().getDefaultStack());
            entries.add(END_PANDA_ORE.asItem().getDefaultStack());
            entries.add(PARROT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PARROT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PARROT_ORE.asItem().getDefaultStack());
            entries.add(END_PARROT_ORE.asItem().getDefaultStack());
            entries.add(PHANTOM_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PHANTOM_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PHANTOM_ORE.asItem().getDefaultStack());
            entries.add(END_PHANTOM_ORE.asItem().getDefaultStack());
            entries.add(PIG_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PIG_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PIG_ORE.asItem().getDefaultStack());
            entries.add(END_PIG_ORE.asItem().getDefaultStack());
            entries.add(PIGLIN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PIGLIN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PIGLIN_ORE.asItem().getDefaultStack());
            entries.add(END_PIGLIN_ORE.asItem().getDefaultStack());
            entries.add(PILLAGER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PILLAGER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PILLAGER_ORE.asItem().getDefaultStack());
            entries.add(END_PILLAGER_ORE.asItem().getDefaultStack());
            entries.add(POLAR_BEAR_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_POLAR_BEAR_ORE.asItem().getDefaultStack());
            entries.add(NETHER_POLAR_BEAR_ORE.asItem().getDefaultStack());
            entries.add(END_POLAR_BEAR_ORE.asItem().getDefaultStack());
            entries.add(PUFFERFISH_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_PUFFERFISH_ORE.asItem().getDefaultStack());
            entries.add(NETHER_PUFFERFISH_ORE.asItem().getDefaultStack());
            entries.add(END_PUFFERFISH_ORE.asItem().getDefaultStack());
            entries.add(RABBIT_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_RABBIT_ORE.asItem().getDefaultStack());
            entries.add(NETHER_RABBIT_ORE.asItem().getDefaultStack());
            entries.add(END_RABBIT_ORE.asItem().getDefaultStack());
            entries.add(RAVAGER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_RAVAGER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_RAVAGER_ORE.asItem().getDefaultStack());
            entries.add(END_RAVAGER_ORE.asItem().getDefaultStack());
            entries.add(SALMON_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SALMON_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SALMON_ORE.asItem().getDefaultStack());
            entries.add(END_SALMON_ORE.asItem().getDefaultStack());
            entries.add(SHEEP_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SHEEP_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SHEEP_ORE.asItem().getDefaultStack());
            entries.add(END_SHEEP_ORE.asItem().getDefaultStack());
            entries.add(SHULKER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SHULKER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SHULKER_ORE.asItem().getDefaultStack());
            entries.add(END_SHULKER_ORE.asItem().getDefaultStack());
            entries.add(SILVERFISH_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SILVERFISH_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SILVERFISH_ORE.asItem().getDefaultStack());
            entries.add(END_SILVERFISH_ORE.asItem().getDefaultStack());
            entries.add(SKELETON_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(END_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(SLIME_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SLIME_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SLIME_ORE.asItem().getDefaultStack());
            entries.add(END_SLIME_ORE.asItem().getDefaultStack());
            entries.add(SNOW_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SNOW_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SNOW_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(END_SNOW_GOLEM_ORE.asItem().getDefaultStack());
            entries.add(SPIDER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(END_SPIDER_ORE.asItem().getDefaultStack());
            entries.add(SQUID_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_SQUID_ORE.asItem().getDefaultStack());
            entries.add(NETHER_SQUID_ORE.asItem().getDefaultStack());
            entries.add(END_SQUID_ORE.asItem().getDefaultStack());
            entries.add(STRIDER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_STRIDER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_STRIDER_ORE.asItem().getDefaultStack());
            entries.add(END_STRIDER_ORE.asItem().getDefaultStack());
            entries.add(TROPICAL_FISH_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_TROPICAL_FISH_ORE.asItem().getDefaultStack());
            entries.add(NETHER_TROPICAL_FISH_ORE.asItem().getDefaultStack());
            entries.add(END_TROPICAL_FISH_ORE.asItem().getDefaultStack());
            entries.add(TURTLE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_TURTLE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_TURTLE_ORE.asItem().getDefaultStack());
            entries.add(END_TURTLE_ORE.asItem().getDefaultStack());
            entries.add(VEX_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_VEX_ORE.asItem().getDefaultStack());
            entries.add(NETHER_VEX_ORE.asItem().getDefaultStack());
            entries.add(END_VEX_ORE.asItem().getDefaultStack());
            entries.add(VILLAGER_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_VILLAGER_ORE.asItem().getDefaultStack());
            entries.add(NETHER_VILLAGER_ORE.asItem().getDefaultStack());
            entries.add(END_VILLAGER_ORE.asItem().getDefaultStack());
            entries.add(VINDICATOR_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_VINDICATOR_ORE.asItem().getDefaultStack());
            entries.add(NETHER_VINDICATOR_ORE.asItem().getDefaultStack());
            entries.add(END_VINDICATOR_ORE.asItem().getDefaultStack());
            entries.add(WARDEN_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_WARDEN_ORE.asItem().getDefaultStack());
            entries.add(NETHER_WARDEN_ORE.asItem().getDefaultStack());
            entries.add(END_WARDEN_ORE.asItem().getDefaultStack());
            entries.add(WITHER_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_WITHER_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(NETHER_WITHER_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(END_WITHER_SKELETON_ORE.asItem().getDefaultStack());
            entries.add(WOLF_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_WOLF_ORE.asItem().getDefaultStack());
            entries.add(NETHER_WOLF_ORE.asItem().getDefaultStack());
            entries.add(END_WOLF_ORE.asItem().getDefaultStack());
            entries.add(ZOMBIE_ORE.asItem().getDefaultStack());
            entries.add(DEEPSLATE_ZOMBIE_ORE.asItem().getDefaultStack());
            entries.add(NETHER_ZOMBIE_ORE.asItem().getDefaultStack());
            entries.add(END_ZOMBIE_ORE.asItem().getDefaultStack());
        });
        ItemGroupEvents.modifyEntriesEvent(UGroups.SpawnersTab).register(entries -> {
            entries.add(EMPTY_SPAWNER.asItem().getDefaultStack());
            for (EntityType<?> entity : Registries.ENTITY_TYPE.stream().toList()) {
                if (entity == EntityType.PLAYER) continue;
                ItemStack spawner = new ItemStack(SURVIVAL_SPAWNER.asItem());
                spawner.getOrCreateNbt().putString("EntityStored",Registries.ENTITY_TYPE.getId(entity).toString());
                entries.add(spawner);
            }
        });
    }
}